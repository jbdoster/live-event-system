/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

/**
 *  TODO
 *  Create endpoint on server to fetch this file for CI instead.
 */
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/query": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Submit a structured SQL-like query */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @description List of columns to select */
                        columns: string[];
                        joins?: {
                            /**
                             * @description Type of SQL join
                             * @enum {string}
                             */
                            type: "INNER" | "LEFT" | "RIGHT" | "FULL";
                            /** @description Table to join */
                            table: string;
                            /** @description Join condition */
                            on: string;
                        }[];
                        /** @description Schema of the table */
                        schema: string;
                        /**
                         * @description SQL operation (only SELECT supported)
                         * @enum {string}
                         */
                        operation: "SELECT";
                        /** @description Target table */
                        table: string;
                        /** @description SQL WHERE clause */
                        where?: string;
                    };
                };
            };
            responses: {
                /** @description Query received successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example success */
                            status?: string;
                            /** @example Query parsed successfully */
                            message?: string;
                        };
                    };
                };
                /** @description Invalid input */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example error */
                            status?: string;
                            /** @example Invalid query payload */
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
